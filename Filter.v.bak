
// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\HDLFullySerialLMSModel\Filter.v
// Created: 2024-02-10 22:35:18
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Filter
// Source Path: HDLFullySerialLMSModel/HDL LMS Algorithm/Filter
// Hierarchy Level: 1
// Model version: 6.2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Filter
          (clk,
           reset,
           enb,
           newCoeff,
           observed,
           reset_1,
           adapt,
           enb_1,
           delayLine,
           filterOut,
           filterEnb,
           oldCoeff,
           validCoeff);


  input   clk;
  input   reset;
  input   enb;
  input   signed [22:0] newCoeff;  // sfix23_En20
  input   signed [15:0] observed;  // sfix16_En13
  input   reset_1;
  input   adapt;
  input   enb_1;
  output  signed [15:0] delayLine;  // sfix16_En13
  output  signed [26:0] filterOut;  // sfix27_En20
  output  filterEnb;
  output  signed [22:0] oldCoeff;  // sfix23_En20
  output  validCoeff;


  wire Tapped_Delay_out1;
  wire filtEnb;
  wire signed [15:0] Tapped_Delay_out3;  // sfix16_En13
  wire Tapped_Delay_out4;
  wire [4:0] rdAdrs;  // ufix5
  wire signed [22:0] y;  // sfix23_En20
  wire signed [22:0] y_1;  // sfix23_En20
  wire filtEnb_1;
  wire accRst;
  wire dataRst;
  wire coeffRst;
  reg  Delay6_out1;
  reg  Delay7_out1;
  wire signed [15:0] delayLine_1;  // sfix16_En13
  reg signed [15:0] Delay11_reg [0:1];  // sfix16 [2]
  wire signed [15:0] Delay11_reg_next [0:1];  // sfix16_En13 [2]
  wire signed [15:0] Delay11_out1;  // sfix16_En13
  reg  [2:0] Delay3_reg;  // ufix1 [3]
  wire Delay3_out1;
  reg  [2:0] Delay5_reg;  // ufix1 [3]
  wire Delay5_out1;
  wire OR_out1;
  reg  [2:0] Delay8_reg;  // ufix1 [3]
  wire Delay8_out1;
  reg  [2:0] Delay1_reg;  // ufix1 [3]
